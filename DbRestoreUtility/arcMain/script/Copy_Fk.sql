REPLACE PROCEDURE Copy_Fk()
BEGIN
DECLARE RISQL VARCHAR(5000)          DEFAULT '' ; -- TO HOLD NUPI COLUMNS --
DECLARE CHILD_COL VARCHAR(500)          DEFAULT '' ; -- TO HOLD PK COLUMNS -- 
DECLARE PARENT_COL VARCHAR(500)         DEFAULT '' ; -- TO HOLD PK COLUMNS STRING --



FOR C_RI1 AS C_ALL_WRKFLW1 CURSOR FOR 
LOCKING ROW FOR ACCESS
SELECT 
CHILDDB,
CHILDTABLE,
INDEXNAME,
PARENTDB,
PARENTTABLE
FROM SYS_DBC_ALL_RI_CHILDREN WHERE
CHILDDB IN (SELECT PHYSICAL_DB FROM SYS_DB_MAP)
AND PARENTDB IN (SELECT PHYSICAL_DB FROM SYS_DB_MAP)
ORDER BY CHILDTABLE, INDEXNAME
GROUP BY 1, 2, 3, 4, 5

DO

FOR C_RI2 AS C_ALL_WRKFLW2 CURSOR FOR 
LOCKING ROW FOR ACCESS
SELECT 
CHILDKEYCOLUMN,
PARENTKEYCOLUMN
FROM SYS_DBC_ALL_RI_CHILDREN
WHERE 
 CHILDDB=C_RI1.CHILDDB
AND CHILDTABLE=C_RI1.CHILDTABLE
AND INDEXNAME=C_RI1.INDEXNAME 
AND CHILDDB IN (SELECT PHYSICAL_DB FROM SYS_DB_MAP)
AND PARENTDB IN (SELECT PHYSICAL_DB FROM SYS_DB_MAP)
ORDER BY CHILDKEYCOLUMN
DO

	IF (CHILD_COL = '' OR CHILD_COL IS NULL)
	THEN
	SET CHILD_COL = C_RI2.CHILDKEYCOLUMN ;
	SET PARENT_COL = C_RI2.PARENTKEYCOLUMN ;
	ELSE
	SET CHILD_COL = CHILD_COL ||','|| C_RI2.CHILDKEYCOLUMN  ;
	SET PARENT_COL = PARENT_COL ||','|| C_RI2.PARENTKEYCOLUMN  ;
	END IF;

END FOR;	

  SET RISQL = 'ALTER TABLE '||C_RI1.CHILDDB||'.'||C_RI1.CHILDTABLE||' ADD CONSTRAINT '||C_RI1.INDEXNAME||' FOREIGN KEY ( '||CHILD_COL||' )
  REFERENCES WITH NO CHECK OPTION '||C_RI1.PARENTDB||'.'||C_RI1.PARENTTABLE||' ('||PARENT_COL||' );' ;
  
	IF RISQL<>'' OR RISQL IS NOT NULL THEN
	CALL DBC.SYSEXECSQL( :RISQL );
	END IF;
	
  SET CHILD_COL ='';
  SET PARENT_COL = '';

END FOR ;
END;